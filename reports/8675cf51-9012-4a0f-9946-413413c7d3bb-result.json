{"name": "Test Creating A New Task", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: {Alert text : \nMessage: unexpected alert open: {Alert text : }\n  (Session info: chrome=91.0.4472.124)", "trace": "setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"662afaec4d4303ec73a9c689d21445bb\")>\n\n    @allure.title(\"Test Creating A New Task\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.task\n    def test_009_create_task(setup):\n        with allure.step(\"setup driver\"):\n            driver = setup\n            driver.get(Credentials.BASE_URL)\n    \n        # step 1\n        with allure.step('Login to OpenProject'):\n            SharedSteps.login_steps(driver)\n    \n        # step 2\n        with allure.step('Click \"Select a project\" menu button, and select \"TestProject1\" from the drop-down'):\n            SharedSteps.select_project_steps(driver)\n    \n        # step 3\n        with allure.step('On the \"Project Overview\" page, left side menu, click \"Work packages\"'):\n            SharedSteps.goto_work_packages_steps(driver)\n            with allure.step('Note the number of rows displayed in the work packages table'):\n                work_packages_page = WorkPackagesPage(driver)\n                initial_row_count = work_packages_page.count_table_rows()\n    \n        # step 4\n        with allure.step('Click \"+ Create\" green button and select \"TASK\"'):\n            work_packages_page.create_new_task()\n    \n        # step 5\n        with allure.step('Verify the text \"New TASK\" on top of the form that got opened on the right side'):\n            pass\n            # TODO: ASSERT The title of the form is \"New TASK\"\n    \n        # step 6\n        with allure.step('Type unique strings into the subject and description boxes'):\n            work_packages_page.set_task_subject(Credentials.NEW_TASK_SUBJECT)\n            work_packages_page.set_task_description(Credentials.NEW_TASK_DESCRIPTION)\n    \n        # step 7\n        with allure.step('Click \"Save\" button'):\n            work_packages_page.save_new_task()\n            with allure.step('Go back to \"Work Packages\" page'):\n                work_packages_page.click_go_back_button()\n    \n        # step 8\n        with allure.step('Verify that a new row was added to the work packages table'):\n>           current_row_count = work_packages_page.count_table_rows()\n\ntests\\ui\\test_010_create_task.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nframework\\pages\\WorkPackagesPage.py:27: in count_table_rows\n    rows = self.driver_extended.get_elements((By.XPATH, Locators.tb_work_packages_xpath))\ninfra\\web_driver_extensions.py:180: in get_elements\n    return WebDriverWait(self.driver, timeout).until(ec.presence_of_all_elements_located(by))\nc:\\users\\adele angel\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:71: in until\n    value = method(self._driver)\nc:\\users\\adele angel\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:161: in __call__\n    return _find_elements(driver, self.locator)\nc:\\users\\adele angel\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:422: in _find_elements\n    raise e\nc:\\users\\adele angel\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:420: in _find_elements\n    return driver.find_elements(*by)\nc:\\users\\adele angel\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1005: in find_elements\n    return self.execute(Command.FIND_ELEMENTS, {\nc:\\users\\adele angel\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000249D7FF8AF0>\nresponse = {'status': 500, 'value': '{\"value\":{\"data\":{\"text\":\"{Alert text : \"},\"error\":\"unexpected alert open\",\"message\":\"unexpe...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77867A9E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77867A6E+238]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n>           raise exception_class(message, screen, stacktrace, alert_text)\nE           selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: {Alert text : \nE           Message: unexpected alert open: {Alert text : }\nE             (Session info: chrome=91.0.4472.124)\n\nc:\\users\\adele angel\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:241: UnexpectedAlertPresentException"}, "steps": [{"name": "setup driver", "status": "passed", "start": 1625152983163, "stop": 1625152985101}, {"name": "Login to OpenProject", "status": "passed", "start": 1625152985101, "stop": 1625152986963}, {"name": "Click \"Select a project\" menu button, and select \"TestProject1\" from the drop-down", "status": "passed", "start": 1625152986963, "stop": 1625152988158}, {"name": "On the \"Project Overview\" page, left side menu, click \"Work packages\"", "status": "passed", "steps": [{"name": "Note the number of rows displayed in the work packages table", "status": "passed", "start": 1625152989300, "stop": 1625152990101}], "start": 1625152988158, "stop": 1625152990101}, {"name": "Click \"+ Create\" green button and select \"TASK\"", "status": "passed", "start": 1625152990101, "stop": 1625152990815}, {"name": "Verify the text \"New TASK\" on top of the form that got opened on the right side", "status": "passed", "start": 1625152990815, "stop": 1625152990816}, {"name": "Type unique strings into the subject and description boxes", "status": "passed", "start": 1625152990816, "stop": 1625152997730}, {"name": "Click \"Save\" button", "status": "passed", "steps": [{"name": "Go back to \"Work Packages\" page", "status": "passed", "start": 1625152997846, "stop": 1625152997998}], "start": 1625152997730, "stop": 1625152997998}, {"name": "Verify that a new row was added to the work packages table", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: {Alert text : \nMessage: unexpected alert open: {Alert text : }\n  (Session info: chrome=91.0.4472.124)\n\n", "trace": "  File \"D:\\Dev Files\\.John Bryce - Python Automation\\Project\\selenium-test-automation\\tests\\ui\\test_010_create_task.py\", line 71, in test_009_create_task\n    current_row_count = work_packages_page.count_table_rows()\n  File \"D:\\Dev Files\\.John Bryce - Python Automation\\Project\\selenium-test-automation\\framework\\pages\\WorkPackagesPage.py\", line 27, in count_table_rows\n    rows = self.driver_extended.get_elements((By.XPATH, Locators.tb_work_packages_xpath))\n  File \"D:\\Dev Files\\.John Bryce - Python Automation\\Project\\selenium-test-automation\\infra\\web_driver_extensions.py\", line 180, in get_elements\n    return WebDriverWait(self.driver, timeout).until(ec.presence_of_all_elements_located(by))\n  File \"c:\\users\\adele angel\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 71, in until\n    value = method(self._driver)\n  File \"c:\\users\\adele angel\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 161, in __call__\n    return _find_elements(driver, self.locator)\n  File \"c:\\users\\adele angel\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 422, in _find_elements\n    raise e\n  File \"c:\\users\\adele angel\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 420, in _find_elements\n    return driver.find_elements(*by)\n  File \"c:\\users\\adele angel\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1005, in find_elements\n    return self.execute(Command.FIND_ELEMENTS, {\n  File \"c:\\users\\adele angel\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"c:\\users\\adele angel\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 241, in check_response\n    raise exception_class(message, screen, stacktrace, alert_text)\n"}, "start": 1625152997998, "stop": 1625152998019}], "start": 1625152983163, "stop": 1625152998025, "uuid": "b31932a7-c9bd-47ec-b986-2229fb212d03", "historyId": "80fae371a4cadf0893fd497d6153988b", "testCaseId": "eb26ddd98511bb8c7d01092455e6b7bf", "fullName": "tests.ui.test_010_create_task#test_009_create_task", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "task"}, {"name": "parentSuite", "value": "tests.ui"}, {"name": "suite", "value": "test_010_create_task"}, {"name": "host", "value": "AdeleAngel"}, {"name": "thread", "value": "11220-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ui.test_010_create_task"}]}